name: Deploy

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image for testing
        id: build-tester
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./docker
          target: tester
          tags: dev-ops-tester:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  deploy:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Connect to k8s
        uses: actions-hub/kubectl@v1.31.0
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Authenticate with GitHub Container Registry and Create Secret if Needed
        uses: actions-hub/kubectl@v1.31.0
        with:
          redirect-to: CREATE_REGISTRY_SECRET
          args: >
            create secret docker-registry ghcr-secret
            --docker-server=ghcr.io
            --docker-username=${{ github.actor }}
            --docker-password="${{ secrets.GITHUB_TOKEN }}"
            --docker-email="${{ github.actor }}@users.noreply.github.com"
            --dry-run=client -o yaml

      - name: Apply the secret
        uses: actions-hub/kubectl@v1.31.0
        with:
          args: apply -f - "${{ env.CREATE_REGISTRY_SECRET }}"

      - name: Create Kubernetes Secret if not exists
        uses: actions-hub/kubectl@v1.31.0
        with:
          redirect-to: CREATE_SECRET
          args: >
            create secret generic app-secrets
            --from-literal=DEBUG=${{ secrets.DEBUG }}
            --from-literal=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            --from-literal=GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            --dry-run=client -o yaml

      - name: Apply the secret
        uses: actions-hub/kubectl@v1.31.0
        with:
          args: apply -f - "${{ env.CREATE_SECRET }}"

      - name: Deploy to k8s
        uses: actions-hub/kubectl@v1.31.0
        with:
          args: apply -f k8s/

      - name: Rollout to k8s
        uses: actions-hub/kubectl@v1.31.0
        with:
          args: rollout restart deployment app-deployment
